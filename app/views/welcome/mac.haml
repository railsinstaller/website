%div{:style => "padding:35px 100px 0px 100px;"}
  %li#next.step.unit.size1of3.lastUnit
    %article#step3{:role => "article"}
      %header
        %h1
          Step&nbsp;2: Instructions for MAC
          %a{:href => "/windows", :style => "color: #0000FF;"} (Click for Windows)
        %br/
      %section.entry-content
        %p
          %strong Now that you've downloaded the kit let's get started!
          %br/
        %ol
          %li Open the downloaded TAR file to begin the installation and follow the onscreen instructions to setup GIT. This process takes about 20 minutes so I would go grab a cup of coffee and come back!
        %br/
        %li
          Once installation is complete go ahead and open up Terminal under
          %tt /Applications/Utilities
        %br/
        %p Next we will run a few commands to make sure everything was setup correctly:
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ git --version
        %br/
        %p This will display what version of GIT you have.
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ rvm info
        %br/
        %p This will display information about your Ruby Version Manager environment.
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ ruby -v
        %br/
        %p This will display information about your Ruby version to ensure everything was setup properly.
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ rails -v
        %br/
        %p This will display information about your Rails version to ensure everything was setup properly.
        %li Now that we've ensured everything is setup correctly we can now create a brand new rails application.
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ cd Desktop/
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ rails new railsinstaller_osx_demo
        %br/
        %li Once that's complete we can visit the application folder and start Rails server to see the site in our browser.
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ cd railsinstaller_osx_demo/
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ rails server
        %br/
        %p
          Visit
          %a{:href => "http://localhost:3000", :style => "color: #0000FF;"} http://localhost:3000
          in your web browser to see the default Rails welcome page.
        %li The remaining steps will require you to have a text editor. There are various text editors you can use out there but I'll put one below that is fairly popular in the developer community.
        %br/
        %p
          \- Visit link to download:
          %a{:href => "http://www.sublimetext.com", :style => "color: #0000FF;"} Sublime Text
        %p - After downloading and installing Sublime Text you'll need to install its command line functionality:
        %ul
          %li The first task is to make a symlink to subl. Assuming you've placed Sublime Text 2 in the Applications folder, and that you have a ~/bin directory in your path, you can run:
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl
        %br/
        %li You can now visit the folder of your rails application and open your new rails app with Sublime Text
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ cd railsinstaller_osx_demo
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ subl .
        %br/
        %li
          Now that you have your rails demo app open in the text editor edit the
          %tt /config/routes.rb
          file using the navigation panel. Once you're there uncomment the following line of code by removing the "#" sign in front of it. Be sure to to SAVE that file after the change
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} root :to => 'welcome#index'
        %br/
        %li Next you'll need to visit the command line prompt and create a welcome controller for the index action.
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ rails g controller welcome index
        %br/
        %li
          Now lets edit the welcome index.html which can be found under
          = succeed "," do
            %tt app/views/welcome/index.html.erb
          and change the content to say something like the following:
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} &lt;h1&gt;Welcome to the Rails Installer Demo!!!&lt;/h1&gt;
        %br/
        %p Remember to SAVE that file after change.
        %p
          If you restart Rails server and visit
          %a{:href => "http://localhost:3000", :style => "color: #0000FF;"} http://localhost:3000
          you'll see the exact same page because Rails is still serving your index.html file in the public folder. You'll need to remove the file at
          %tt /public/index.html
          within Sublime Text. Then when you refresh the browser you should see your new page!
        %li
          Now for the FINAL stretch, using version control and committing your changes to Github. First let's visit your Github account at
          = succeed "," do
            %a{:href => "https://github.com/", :style => "color: #0000FF;"} https://github.com/username
          sign up if you don't have one.
        %br/
        %li
          Next we'll need to make sure your SSH key is all setup. On your Github page go to
          %tt Account Settings
          then
          %tt SSH Keys
          on the left hand side and click on
          = succeed "." do
            %tt Add SSH Key
          You can name your key whatever you want. Now follow the command line steps below to generate your SSH Key
        %br/
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ ssh-keygen -t rsa -C "youremail@blank.com"
        %br/
        %p Be sure to enter a nice strong password when prompted
        %pre{:style => "border:dashed black 1px; font-style:italic;"} $ pbcopy < ~/.ssh/id_rsa.pub
        %br/
        %p Now go back to Github and paste the copied key into the required section. Save it.
        %li Next we'll create a new repository on Github, you can call it whatever you want but it's best to keep it similar to our app titled "railsinstaller_osx_demo"
        %br/
        %li Finally we'll finish it off with the following commands to push your code to Git and Github.
        %br/
        %strong Command Line:
        %br/
        %br/
        %ul
          %li
            %pre{:style => "border:dashed black 1px; font-style:italic;"} $ git init
            %br/
        %br/
        %li
          %pre{:style => "border:dashed black 1px; font-style:italic;"} $ git add .
          %br/
        %br/
        %li
          %pre{:style => "border:dashed black 1px; font-style:italic;"} $ git commit -m "first commit"
          %br/
        %br/
        %li
          %pre{:style => "border:dashed black 1px; font-style:italic;"} $ git remote add origin git@github.com:accountname/railsinstaller_osx_demo.git
          %br/
        %br/
        %li
          %pre{:style => "border:dashed black 1px; font-style:italic;"} $ git push origin master
          %br/
        %p Enter your Github.com credentials when prompted then press ENTER.
        %br/
        %h1{:style => "font-size: 48px; text-align:right;"} It's OFFICIAL, You've created your first Rails Project!
